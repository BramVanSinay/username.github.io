package domein;

public class Speler {
	private String gebruikersnaam;
	private int geboortejaar;
	private int aantalGewonnen, aantalGespeeld;
	private int score = 0;
	private static final int AANTAL_GEBOUWSTENEN = 6;
	private static final int DEFAULT_SCORE = 0;
	private static final int DEFAULT_AANTAL_GEWONNEN = 0;
	private static final int DEFAULT_AANTAL_GESPEELD = 0;
	private static final int MIN_GEBOORTEJAAR = 2019;
	private static final int MAX_GEBOORTEJAAR = 1925;
	private static final int HUIDIG_JAAR = 2025;
	

	public Speler(String gebruikersnaam, int geboortejaar) {
		this(gebruikersnaam, geboortejaar,DEFAULT_AANTAL_GESPEELD, DEFAULT_AANTAL_GEWONNEN);
	}
	
//	public Speler(String gebruikersnaam, int geboortejaar, int aantalGewonnen, int aantalGespeeld) {	
//		this(gebruikersnaam, geboortejaar, aantalGewonnen, aantalGespeeld);
//		setScore(score);
//	}

	public Speler(String gebruikersnaam, int geboortejaar, int aantalGewonnen, int aantalGespeeld) {
		setGebruikersnaam(gebruikersnaam);
		setGeboortejaar(geboortejaar);
		setAantalGewonnen(aantalGewonnen);
		setAantalGespeeld(aantalGespeeld);
	}
	//getters en setters

	public String getGebruikersnaam() {
		return gebruikersnaam;
	}

	private void setGebruikersnaam(String gebruikersnaam) {
		if (gebruikersnaam == null || gebruikersnaam.length() < 6 || gebruikersnaam.isBlank())
			throw new IllegalArgumentException(
					"Gebruikersnaam moet minimum 6 karakters lang zijn en mag niet enkel uit spaties bestaan!");
		this.gebruikersnaam = gebruikersnaam;
	}

	public int getGeboortejaar() {
		return geboortejaar;
	}

	private void setGeboortejaar(int geboortejaar) {
		if (geboortejaar > MIN_GEBOORTEJAAR || geboortejaar < MAX_GEBOORTEJAAR)
			throw new IllegalArgumentException(
					String.format("De speler moet tussen de [%d-%d] jaar oud zijn", HUIDIG_JAAR - MIN_GEBOORTEJAAR, HUIDIG_JAAR - MAX_GEBOORTEJAAR));
		this.geboortejaar = geboortejaar;
	}

	public int getAantalGewonnen() {
		return aantalGewonnen;
	}

	private void setAantalGewonnen(int aantalGewonnen) {
		if(aantalGewonnen < 0)
			throw new IllegalArgumentException("Je overwinning kan niet negatief zijn!");
		this.aantalGewonnen = aantalGewonnen;
	}

	public int getAantalGespeeld() {
		return aantalGespeeld;
	}

	private void setAantalGespeeld(int aantalGespeeld) {
		if(aantalGespeeld < 0)
			throw new IllegalArgumentException("Je gespeelde aantal spellen kan niet negatief liggen!");
		this.aantalGespeeld = aantalGespeeld;
	}
	
	public final void setScore(int score) {
		if(score < DEFAULT_SCORE)
			throw new IllegalArgumentException("Je score kan niet negatief zijn!");
		this.score = score;
	}
	public int getScore() {
		return score;
	}
	
	
	

}
